name: Linting Python files with Flake8

on:
  pull_request:
  push:
    branches:
    - main
    #   # - 'aus-**'
    #   # - 'dev-**'
    paths-ignore:
      # Ignore these directories.
      - 'scripts/*.py'

jobs:
  build:
    name: Linting Python files with Flake8
    runs-on: ubuntu-latest
    # Required permissions to run the action
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all the changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
          since_last_remote_commit: true

      - name: Print all the changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in $ALL_CHANGED_FILES; do
            echo "$file was changed"
          done

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # Check for Python files
            if [[ $file == *.py ]]; then
              echo "Linting $file"
              # stop the build if there are Python syntax errors or undefined names
              flake8 . $file --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . $file --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            fi
          done
