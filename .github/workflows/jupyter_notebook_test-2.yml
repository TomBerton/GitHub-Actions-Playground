name: Check for and test Jupyter notebooks

on:
  pull_request:
  push:
    branches:
    - main
    #   # - 'aus-**'
    #   # - 'dev-**'

jobs:
  check:
    name: Checkout repository code
    runs-on: ubuntu-latest
    outputs:
      jn-files-found: ${{ steps.check-jn-files-found.outputs.jn-files-found }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all the changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
          since_last_remote_commit: true

      - name: Check for Jupyter notebook solutions in the PR.
        id: check-jn-files-found
        run: |
          if grep -q ".ipynb " <<< "${{ steps.changed-files.outputs.all_changed_files }}"; then
            echo "Jupyter notebooks found in the PR."
            echo "{jn-files-found=true}" >> $GITHUB_OUTPUT
          else
            echo "No Jupyter notebooks found in the PR."
            echo "{jn-files-found=false}" >> $GITHUB_OUTPUT
          fi

  test:
    name: Test Jupyter notebooks
    needs: check
    runs-on: ubuntu-latest
    run: echo "The value of jn-files-found is ${{ needs.check.outputs.jn-files-found }}"
    if: ${{ needs.check.outputs.jn-files-found == 'true' }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all the changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
          since_last_remote_commit: true

      # See: https://github.com/marketplace/actions/setup-miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-variant: Mambaforge
          channels: conda-forge
          activate-environment: dev
          environment-file: env_files/environment.yml
          use-mamba: true

      - name: Build environment
        run:
          conda activate dev

      - name: Run script to test Jupyter notebooks
        run: |
          cd Lessons
          python ..scripts/jn_test.py
