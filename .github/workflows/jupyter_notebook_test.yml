name: Check for and test Jupyter notebooks

on:
  pull_request:
  push:
    branches:
    - main
    #   # - 'aus-**'
    #   # - 'dev-**'

jobs:
  check:
    name: Checkout repository code
    runs-on: ubuntu-latest
    outputs:
      jn-files-found: ${{ steps.check-jn-files-found.outputs.jn-files-found }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all the changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
          since_last_remote_commit: true

      - name: Check for Jupyter notebook solutions in the PR.
        id: check-jn-files-found
        run: |
          if grep -q "solution.ipynb" <<< "${{ steps.changed-files.outputs.all_changed_files }}"; then
            echo "Jupyter notebook solutions are in the PR."
            echo "jn-files-found=true" >> $GITHUB_OUTPUT
          else
            echo "There are no Jupyter notebook solutions found in the PR."
            echo "jn-files-found=false" >> $GITHUB_OUTPUT
          fi

  test:
    name: Test Jupyter notebooks
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.jn-files-found == 'true'
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all the changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        # To compare changes between the current commit and the last pushed remote commit set `since_last_remote_commit: true`. e.g
        with:
          since_last_remote_commit: true

      # See: https://github.com/marketplace/actions/setup-miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-variant: Mambaforge
          channels: conda-forge
          activate-environment: dev
          environment-file: env_files/environment.yml
          use-mamba: true

      - name: Activate environment
        run:
          conda activate dev

      - name: Run script to test Jupyter notebooks
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          # Check for Python solution files in directories containing "Lessons"
            if [[ $file == *Lessons* ]]; then
              echo "Testing Lesson: $file"
              # bash /home/runner/work/GitHub-Actions-Playground/GitHub-Actions-Playground/scripts/lessons_jn_test.sh "${file}"
            else
              echo "Testing Homework: $file"
              # bash /home/runner/work/GitHub-Actions-Playground/GitHub-Actions-Playground/scripts/homework_jn_test.sh "${file}"
            fi
          done
